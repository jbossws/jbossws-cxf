<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <name>JBoss Web Services - Stack CXF Specific Tests jakarta</name>
  <artifactId>jbossws-cxf-specific-tests</artifactId>
  <packaging>jar</packaging>
  
  <!-- Parent -->
  <parent>
    <groupId>org.jboss.ws.cxf</groupId>
    <artifactId>jbossws-cxf-testsuite</artifactId>
     <version>6.0.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  
  <properties>
    <!-- This is used for test archives embedding Spring -->
    <test.spring.version>6.0.0-M4</test.spring.version>
    <test.cxf.version>${cxf.version}</test.cxf.version>
    <jakarta-client-webservices.version>2.0.0.Beta3</jakarta-client-webservices.version>

      <!-- base name of related server config files -->
      <jbws-testsuite-jms-base>jbws-testsuite-jms</jbws-testsuite-jms-base>
      <jbws-testsuite-default-base>jbws-testsuite-default</jbws-testsuite-default-base>
      <jbws-testsuite-default-config-tests-base>jbws-testsuite-default-config-tests</jbws-testsuite-default-config-tests-base>
  </properties>

  <dependencies>
     <dependency>
        <groupId>org.eclipse.angus</groupId>
        <artifactId>angus-activation</artifactId>
     </dependency>
     <dependency>
        <groupId>org.eclipse.angus</groupId>
        <artifactId>angus-mail</artifactId>
     </dependency>
     <dependency>
        <groupId>jakarta.xml.ws</groupId>
        <artifactId>jakarta.xml.ws-api</artifactId>
     </dependency>
     <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
     </dependency>
     <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
     </dependency>

    <dependency> <!-- Always make sure jbossws-cxf-factories dependency is explicitly declared before anything transitively pulling CXF -->
      <groupId>org.jboss.ws.cxf</groupId>
      <artifactId>jbossws-cxf-factories</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.ws.cxf</groupId>
      <artifactId>jbossws-cxf-client</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.ws.cxf</groupId>
      <artifactId>jbossws-cxf-test-utils</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.ws.cxf</groupId>
      <artifactId>jbossws-cxf-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.woodstox</groupId>
      <artifactId>woodstox-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
       <groupId>org.apache.derby</groupId>
       <artifactId>derby</artifactId>
       <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.littleshoot</groupId>
      <artifactId>littleproxy</artifactId>
      <version>${org.littleshoot.littleproxy.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>net.sf.ehcache</groupId>
          <artifactId>ehcache-core</artifactId>
        </exclusion>
        <!-- Let the container messaging subsystem control the Netty dependency version  -->
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-all</artifactId>
        </exclusion>
      </exclusions>
     </dependency>
     <dependency>
         <groupId>org.wildfly.security</groupId>
         <artifactId>wildfly-elytron-client</artifactId>
         <version>${wildfly.elytron.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.wildfly.security.jakarta</groupId>
          <artifactId>jakarta-client-webservices</artifactId>
          <version>${jakarta-client-webservices.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.apache.activemq</groupId>
          <artifactId>artemis-jakarta-client</artifactId>
          <scope>test</scope>
      </dependency>
  </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            <configuration>
               <maxmem>256M</maxmem>
               <fork>false</fork>
               <encoding>UTF-8</encoding>
            </configuration>
            <executions>
               <execution>
                  <id>default-testCompile</id>
                  <phase>test-compile</phase>
                  <configuration>
                     <testExcludes>
                        <exclude>**/org/jboss/test/ws/jaxws/samples/wsse/policy/trust/WSTrustTestCase.java</exclude>
                     </testExcludes>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

  <!-- Profiles -->
  <profiles>

    <!-- 
    Name:  noprepare
    Descr: Skip test preparation with -Dnoprepare  
    -->
    <profile>
      <id>noprepare</id>
      <activation>
        <property>
          <name>!noprepare</name>
        </property>
      </activation>
      <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>create-server-config</id>
                        <phase>pre-integration-test</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <target>
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                                         classpathref="maven.plugin.classpath"/>
                                <condition property="isWin">
                                    <os family="windows" />
                                </condition>

                                <if>
                                    <equals arg1="${isWin}" arg2="true" />
                                    <then>
                                        <!-- On Windows CLI properties passed to CLI scripts can be unix path format -->
                                        <propertyregex property="value-testResourcesDir"
                                                       input="${project.build.directory}/test-resources"
                                                       regexp="\\"
                                                       replace="/"
                                                       global="true" />

                                        <propertyregex property="value-usersPropFile"
                                                       input="${basedir}/src/test/resources/jaxws/samples/wsse/policy/jaas/digest/WEB-INF/jbossws-users.properties"
                                                       regexp="\\"
                                                       replace="/"
                                                       global="true" />

                                        <propertyregex property="value-rolesPropFile"
                                                       input="${basedir}/src/test/resources/jaxws/samples/wsse/policy/jaas/digest/WEB-INF/jbossws-roles.properties"
                                                       regexp="\\"
                                                       replace="/"
                                                       global="true" />

                                        <propertyregex property="value-keystorePath"
                                                       input="${basedir}/src/test/etc/test.keystore"
                                                       regexp="\\"
                                                       replace="/"
                                                       global="true" />

                                        <propertyregex property="value-truststorePath"
                                                       input="${basedir}/src/test/etc/test.truststore"
                                                       regexp="\\"
                                                       replace="/"
                                                       global="true" />

                                        <!-- Windows directory path must have backslashes and those
                                             must be escaped. -->
                                        <propertyregex property="wfly-config-dir"
                                                       input="/standalone/configuration/"
                                                       regexp="/"
                                                       replace="\\\\"
                                                       global="true" />

                                        <propertyregex property="value-jbws-app-props"
                                                       input="${basedir}/src/test/etc/"
                                                       regexp="\\"
                                                       replace="/"
                                                       global="true" />

                                        <propertyregex property="value-project.build.directory"
                                                       input="${project.build.directory}\"
                                                       regexp="\\"
                                                       replace="\\\"
                                                       global="true" />

                                    </then>
                                    <else>
                                        <echo message="Unix found" />
                                        <property name="value-testResourcesDir" value="${project.build.directory}/test-resources"/>
                                        <property name="value-usersPropFile" value="${basedir}/src/test/resources/jaxws/samples/wsse/policy/jaas/digest/WEB-INF/jbossws-users.properties"/>
                                        <property name="value-rolesPropFile" value="${basedir}/src/test/resources/jaxws/samples/wsse/policy/jaas/digest/WEB-INF/jbossws-roles.properties"/>
                                        <property name="value-keystorePath" value="${basedir}/src/test/etc/test.keystore"/>
                                        <property name="value-truststorePath" value="${project.build.directory}/test-classes/test.truststore"/>

                                        <property name="wfly-config-dir" value="/standalone/configuration/"/>
                                        <property name="value-jbws-app-props" value="${basedir}/src/test/etc/"/>
                                        <property name="value-project.build.directory" value="${project.build.directory}/"/>
                                    </else>
                                </if>


                                <copy overwrite="true"
                                      file="${jboss.home}${wfly-config-dir}standalone.xml"
                                      tofile="${jboss.home}${wfly-config-dir}${jbws-testsuite-default-base}.xml" />

                                <propertyfile file="${value-project.build.directory}${jbws-testsuite-default-base}-elytron-CLI.properties">
                                    <entry key="testResourcesDir" value="${value-testResourcesDir}"/>
                                    <entry key="usersPropFile" value="${value-usersPropFile}"/>
                                    <entry key="rolesPropFile" value="${value-rolesPropFile}"/>
                                    <entry key="keystorePath" value="${value-keystorePath}"/>
                                    <entry key="serverLog" value="${jbws-testsuite-default-base}.log"/>

                                    <entry key="jboss.home" value="${jboss.home}"/>
                                    <entry key="wfly-config-dir" value="${wfly-config-dir}"/>
                                </propertyfile>

                                <copy overwrite="true"
                                      file="${jboss.home}${wfly-config-dir}standalone.xml"
                                      tofile="${jboss.home}${wfly-config-dir}jbws-testsuite-ssl-mutual-auth.xml" />

                                <propertyfile file="${value-project.build.directory}jbws-testsuite-ssl-mutual-auth-elytron-CLI.properties">
                                    <entry key="keystorePath" value="${value-keystorePath}"/>
                                    <entry key="truststorePath" value="${value-truststorePath}"/>
                                    <entry key="serverLog" value="jbws-testsuite-ssl-mutual-auth.log"/>
                                </propertyfile>

                                <copy overwrite="true"
                                      file="${jboss.home}${wfly-config-dir}standalone.xml"
                                      tofile="${jboss.home}${wfly-config-dir}${jbws-testsuite-default-config-tests-base}.xml" />

                                <propertyfile file="${value-project.build.directory}${jbws-testsuite-default-config-tests-base}-elytron-CLI.properties">
                                    <entry key="usersPropFile" value="${value-usersPropFile}"/>
                                    <entry key="rolesPropFile" value="${value-rolesPropFile}"/>
                                    <entry key="serverLog" value="${jbws-testsuite-default-config-tests-base}.log"/>
                                </propertyfile>

                                <copy overwrite="true"
                                      file="${jboss.home}${wfly-config-dir}standalone-full.xml"
                                      tofile="${jboss.home}${wfly-config-dir}${jbws-testsuite-jms-base}.xml" />
                                <propertyfile file="${value-project.build.directory}${jbws-testsuite-jms-base}-elytron-CLI.properties">
                                    <entry key="serverLog" value="${jbws-testsuite-jms-base}.log"/>
                                </propertyfile>

                                <copy overwrite="true"
                                      file="${value-jbws-app-props}jbws-application-users.properties"
                                      tofile="${jboss.home}${wfly-config-dir}jbws-application-users.properties" />
                               <copy overwrite="true"
                                      file="${value-jbws-app-props}jbws-application-roles.properties"
                                      tofile="${jboss.home}${wfly-config-dir}jbws-application-roles.properties" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>4.0.0.Alpha2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.wildfly.core</groupId>
                        <artifactId>wildfly-controller-client</artifactId>
                        <version>17.0.1.Final</version>
                    </dependency>
                </dependencies>
                <executions>
                    <!-- Each execution runs a CLI script to configure a new (standalone.xml)
                         used when running categories of tests -->
                    <execution>
                        <id>jbws-testsuite-default config-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>execute-commands</goal>
                        </goals>
                        <configuration>
                            <offline>true</offline>
                            <scripts>
                                <script>${basedir}/src/test/cli/${jbws-testsuite-default-base}-elytron.cli</script>
                            </scripts>
                            <propertiesFiles>${project.build.directory}/${jbws-testsuite-default-base}-elytron-CLI.properties</propertiesFiles>
                            <jboss-home>${jboss.home}</jboss-home>
                            <stdout>${project.build.directory}/${jbws-testsuite-default-base}-elytron-CLI.log</stdout>
                            <system-properties>
                                <enableServerLoggingToConsole-prop>${enableServerLoggingToConsole}</enableServerLoggingToConsole-prop>
                            </system-properties>
                        </configuration>
                    </execution>

                    <execution>
                        <id>ssl-mutual-auth config-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>execute-commands</goal>
                        </goals>
                        <configuration>
                            <offline>true</offline>
                            <scripts>
                                <script>${basedir}/src/test/cli/jbws-testsuite-ssl-mutual-auth-elytron.cli</script>
                            </scripts>
                            <propertiesFiles>${project.build.directory}/jbws-testsuite-ssl-mutual-auth-elytron-CLI.properties</propertiesFiles>
                            <jboss-home>${jboss.home}</jboss-home>
                            <stdout>${project.build.directory}/jbws-testsuite-ssl-mutual-auth-elytron-CLI.log</stdout>
                            <system-properties>
                                <enableServerLoggingToConsole-prop>${enableServerLoggingToConsole}</enableServerLoggingToConsole-prop>
                            </system-properties>
                        </configuration>
                    </execution>

                    <execution>
                        <id>default-config-tests config-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>execute-commands</goal>
                        </goals>
                        <configuration>
                            <offline>true</offline>
                            <scripts>
                                <script>${basedir}/src/test/cli/${jbws-testsuite-default-config-tests-base}-elytron.cli</script>
                            </scripts>
                            <propertiesFiles>${project.build.directory}/${jbws-testsuite-default-config-tests-base}-elytron-CLI.properties</propertiesFiles>
                            <jboss-home>${jboss.home}</jboss-home>
                            <stdout>${project.build.directory}/${jbws-testsuite-default-config-tests-base}-elytron-CLI.log</stdout>
                            <system-properties>
                                <enableServerLoggingToConsole-prop>${enableServerLoggingToConsole}</enableServerLoggingToConsole-prop>
                            </system-properties>
                        </configuration>
                    </execution>

                    <execution>
                        <id>jms config-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>execute-commands</goal>
                        </goals>
                        <configuration>
                            <offline>true</offline>
                            <scripts>
                                <script>${basedir}/src/test/cli/${jbws-testsuite-jms-base}-elytron.cli</script>
                            </scripts>
                            <propertiesFiles>${project.build.directory}/${jbws-testsuite-jms-base}-elytron-CLI.properties</propertiesFiles>
                            <jboss-home>${jboss.home}</jboss-home>
                            <stdout>${project.build.directory}/${jbws-testsuite-jms-base}-elytron-CLI.log</stdout>
                            <system-properties>
                                <enableServerLoggingToConsole-prop>${enableServerLoggingToConsole}</enableServerLoggingToConsole-prop>
                            </system-properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
            	<execution> <!-- This downloads and copies some Spring libs into target/spring to be later picked up and included in some test jars -->
            		<id>copy-spring</id>
            		<phase>process-test-resources</phase>
            		<goals>
            			<goal>copy</goal>
            		</goals>
            		<configuration>
            			<artifactItems>
            				<artifactItem>
            					<groupId>org.springframework</groupId>
            					<artifactId>spring-beans</artifactId>
            					<version>${test.spring.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.springframework</groupId>
            					<artifactId>spring-context</artifactId>
            					<version>${test.spring.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.springframework</groupId>
            					<artifactId>spring-core</artifactId>
            					<version>${test.spring.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.springframework</groupId>
            					<artifactId>spring-expression</artifactId>
            					<version>${test.spring.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.springframework</groupId>
            					<artifactId>spring-web</artifactId>
            					<version>${test.spring.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.springframework</groupId>
            					<artifactId>spring-aop</artifactId>
            					<version>${test.spring.version}</version>
            				</artifactItem>
            			</artifactItems>
            			<outputDirectory>target/spring</outputDirectory>
            		</configuration>
            	</execution>
            	<execution>
            		<id>copy-cxf</id>
            		<phase>process-test-resources</phase>
            		<goals>
            			<goal>copy</goal>
            		</goals>
            		<configuration>
            			<artifactItems>
            				<artifactItem>
            					<groupId>org.apache.cxf</groupId>
            					<artifactId>cxf-rt-frontend-jaxws</artifactId>
            					<version>${test.cxf.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.apache.cxf</groupId>
            					<artifactId>cxf-rt-frontend-simple</artifactId>
            					<version>${test.cxf.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.apache.cxf</groupId>
            					<artifactId>cxf-core</artifactId>
            					<version>${test.cxf.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.apache.cxf</groupId>
            					<artifactId>cxf-rt-transports-http</artifactId>
            					<version>${test.cxf.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.apache.cxf</groupId>
            					<artifactId>cxf-rt-bindings-soap</artifactId>
            					<version>${test.cxf.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.apache.cxf</groupId>
            					<artifactId>cxf-rt-databinding-jaxb</artifactId>
            					<version>${test.cxf.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.apache.cxf</groupId>
            					<artifactId>cxf-rt-ws-policy</artifactId>
            					<version>${test.cxf.version}</version>
            				</artifactItem>
            				<artifactItem>
            					<groupId>org.apache.cxf</groupId>
            					<artifactId>cxf-rt-wsdl</artifactId>
            					<version>${test.cxf.version}</version>
            				</artifactItem>
            			</artifactItems>
            			<outputDirectory>target/cxf-embedded</outputDirectory>
            		</configuration>
            	</execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- When the 'fast' profile is on, the testsuite runs in parallel mode; Arquillan messes up with containers in such a scenario, unless they're started upfront.
         So we start all the containers specified in the arquillan.xml configuration -->
    <profile>
      <id>fast</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <executions>
	          <execution>
	            <id>jboss</id>
	            <phase>pre-integration-test</phase>
	            <goals>
	              <goal>start</goal>
	            </goals>
	            <configuration>
	              <jvmArgs>-server -Xms64m -Xmx512m -Djboss.socket.binding.port-offset=${port-offset.cxf-tests.jboss} ${additionalJvmArgs}</jvmArgs>
	              <serverConfig>jbws-testsuite-default.xml</serverConfig>
	              <jbossHome>${jboss.home}</jbossHome>
                  <!-- TODO: add serverArgs section to use a custom bind address (requires wildfly-maven-plugin 1.1.0 +)
                       https://github.com/wildfly/wildfly-maven-plugin/commit/160b1a29f4e26fff9f60b7cb4c8e3c1b055c7300 -->
	              <port>9990</port> <!-- Keep in sync with the port-offset -->
	            </configuration>
	          </execution>
	          <execution>
	            <id>jboss-shutdown</id>
	            <phase>post-integration-test</phase>
	            <goals>
	              <goal>shutdown</goal>
	            </goals>
	            <configuration>
	              <port>9990</port> <!-- Keep in sync with the port-offset -->
	            </configuration>
	          </execution>
 	          <execution>
	            <id>ssl-mutual-auth</id>
	            <phase>pre-integration-test</phase>
	            <goals>
	              <goal>start</goal>
	            </goals>
	            <configuration>
	              <jvmArgs>-server -Xms48m -Xmx384m -Djboss.socket.binding.port-offset=${port-offset.cxf-tests.ssl-mutual-auth} ${additionalJvmArgs}</jvmArgs>
	              <serverConfig>jbws-testsuite-ssl-mutual-auth.xml</serverConfig>
	              <jbossHome>${jboss.home}</jbossHome>
                  <!-- TODO: add serverArgs section to use a custom bind address (requires wildfly-maven-plugin 1.1.0 +)
                       https://github.com/wildfly/wildfly-maven-plugin/commit/160b1a29f4e26fff9f60b7cb4c8e3c1b055c7300 -->
	              <port>14990</port> <!-- Keep in sync with the port-offset -->
	            </configuration>
	          </execution>
 	          <execution>
	            <id>ssl-mutual-auth-shutdown</id>
	            <phase>post-integration-test</phase>
	            <goals>
	              <goal>shutdown</goal>
	            </goals>
	            <configuration>
	              <port>14990</port> <!-- Keep in sync with the port-offset -->
	            </configuration>
	          </execution>
	          <execution>
	            <id>default-config-tests</id>
	            <phase>pre-integration-test</phase>
	            <goals>
	              <goal>start</goal>
	            </goals>
	            <configuration>
	              <jvmArgs>-server -Xms48m -Xmx384m -Djboss.socket.binding.port-offset=${port-offset.cxf-tests.default-config-tests} ${additionalJvmArgs}</jvmArgs>
	              <serverConfig>jbws-testsuite-default-config-tests.xml</serverConfig>
	              <jbossHome>${jboss.home}</jbossHome>
                  <!-- TODO: add serverArgs section to use a custom bind address (requires wildfly-maven-plugin 1.1.0 +)
                       https://github.com/wildfly/wildfly-maven-plugin/commit/160b1a29f4e26fff9f60b7cb4c8e3c1b055c7300 -->
	              <port>19990</port> <!-- Keep in sync with the port-offset -->
	            </configuration>
	          </execution>
	          <execution>
	            <id>default-config-tests-shutdown</id>
	            <phase>post-integration-test</phase>
	            <goals>
	              <goal>shutdown</goal>
	            </goals>
	            <configuration>
	              <port>19990</port> <!-- Keep in sync with the port-offset -->
	            </configuration>
	          </execution>
	          <execution>
	            <id>jms</id>
	            <phase>pre-integration-test</phase>
	            <goals>
	              <goal>start</goal>
	            </goals>
	            <configuration>
	              <jvmArgs>-server -Xms48m -Xmx384m -Djboss.socket.binding.port-offset=${port-offset.cxf-tests.jms} ${additionalJvmArgs}</jvmArgs>
	              <serverConfig>jbws-testsuite-jms.xml</serverConfig>
	              <jbossHome>${jboss.home}</jbossHome>
                  <!-- TODO: add serverArgs section to use a custom bind address (requires wildfly-maven-plugin 1.1.0 +)
                       https://github.com/wildfly/wildfly-maven-plugin/commit/160b1a29f4e26fff9f60b7cb4c8e3c1b055c7300 -->
	              <port>44990</port> <!-- Keep in sync with the port-offset -->
	            </configuration>
	          </execution>
	          <execution>
	            <id>jms-shutdown</id>
	            <phase>post-integration-test</phase>
	            <goals>
	              <goal>shutdown</goal>
	            </goals>
	            <configuration>
	              <port>44990</port> <!-- Keep in sync with the port-offset -->
	            </configuration>
	          </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
</project>
